#ifndef SPRITES_H
#define SPRITES_H

// char notch_array[256] = {
// 	0x00, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x18, 0x61, 0x86, 0x18, 0x60, 0x80, 0x80, 0x80, 0x00, 0x3f, 0x7f, 0x01, 0x09, 0x0f, 0x06, 0x00, 0x26, 0x4f, 0x4f, 0x79, 0x79, 0x32, 0x00, 0x00, 0x3f, 0x7e, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x60, 0x18, 0x86, 0x61, 0x18, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x00, 
// 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
// };

char addBase_array[24] = {
	0x00, 0x00, 0x7f, 0xfc, 0x86, 0xda, 0xda, 0xda, 0xa6, 0xfe, 0xc6, 0xba, 0xba, 0xba, 0xd6, 0xfe, 0xc6, 0xba, 0xba, 0xc6, 0xfc, 0x7f, 0x00, 0x00, 
};

char addUnpressed_array[48] = {
	0x00, 0x00, 0x00, 0x80, 0x80, 0xe0, 0x10, 0x08, 0xc8, 0xc4, 0xc4, 0xf4, 0xf4, 0xc4, 0xc4, 0xc8, 0x08, 0x10, 0xe0, 0x80, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0x00, 0x00, 0x1f, 0x22, 0x44, 0x44, 0x88, 0x88, 0x8b, 0x8b, 0x88, 0x88, 0x44, 0x44, 0x22, 0x1f, 0x00, 0x00, 0xff, 0x00, 0x00, 
};

char addChanging_array[48] = {
	0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x20, 0x10, 0x90, 0x88, 0x88, 0xe8, 0xe8, 0x88, 0x88, 0x90, 0x10, 0x20, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0x00, 0x00, 0x1f, 0x24, 0x48, 0x49, 0x91, 0x91, 0x97, 0x97, 0x91, 0x91, 0x49, 0x48, 0x24, 0x1f, 0x00, 0x00, 0xff, 0x00, 0x00, 
};

char addPressed_array[48] = {
	0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0xe0, 0xe0, 0xf0, 0xf0, 0x30, 0x30, 0xf0, 0xf0, 0xe0, 0xe0, 0xc0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0x00, 0x00, 0x1f, 0x2f, 0x5f, 0x5c, 0xbc, 0xbc, 0xb0, 0xb0, 0xbc, 0xbc, 0x5c, 0x5f, 0x2f, 0x1f, 0x00, 0x00, 0xff, 0x00, 0x00, 
};


char ready_array[24] = {
	0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 
};
// nombre: ready, filas: 1, columnas: 24


char running_array[72] = {
	0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3e, 0x1c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3e, 0x1c, 0x00, 
	0x3f, 0x3f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
// nombre: running, filas: 3, columnas: 24


char stopped_array[72] = {
	0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
};
// nombre: stopped, filas: 3, columnas: 24



typedef struct sprite {
    int fil;
	int col;
    char *matrix;
}sprite_t;

sprite_t stateReady = {1, 24, ready_array};
sprite_t stateRunning = {3, 24, running_array};
sprite_t stateStopped = {3, 24, stopped_array};

// sprite_t notch = { 2, 128, notch_array };

sprite_t addBase = { 1, 24, addBase_array };

sprite_t addUnpressed = { 2, 24, addUnpressed_array };

sprite_t addChanging = { 2, 24, addChanging_array };

sprite_t addPressed = { 2, 24, addPressed_array };

typedef struct button_frame_t {
sprite_t *base;
	sprite_t *unpressed;
	sprite_t *changing;
	sprite_t *pressed;
}button_frame_t;

button_frame_t addition_frames = {
	&addBase,
	&addUnpressed,
	&addChanging,
	&addPressed
};
#endif

