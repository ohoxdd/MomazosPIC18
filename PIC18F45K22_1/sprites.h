#ifndef SPRITES_H
#define SPRITES_H


char ready_array[24] = {
	0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 0x1c, 0x3e, 0x7f, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 
};
// nombre: ready, filas: 1, columnas: 24


char running_array[72] = {
	0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3e, 0x1c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3e, 0x1c, 0x00, 
	0x3f, 0x3f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
// nombre: running, filas: 3, columnas: 24


char stopped_array[72] = {
	0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
};
// nombre: stopped, filas: 3, columnas: 24

char add[5] = {
	0x08, 0x08, 0x3e, 0x08, 0x08, 
};
// nombre: add, filas: 1, columnas: 5


char select[5] = {
	0x00, 0x3e, 0x3e, 0x1c, 0x08, 
};
// nombre: select, filas: 1, columnas: 5


char stop[5] = {
	0x3e, 0x3e, 0x00, 0x3e, 0x3e, 
};
// nombre: stop, filas: 1, columnas: 5


char sub[5] = {
	0x08, 0x08, 0x08, 0x08, 0x08, 
};
// nombre: sub, filas: 1, columnas: 5


typedef struct sprite {
    int fil;
	int col;
    char *matrix;
}sprite_t;

sprite_t stateReady = {1, 24, ready_array};
sprite_t stateRunning = {3, 24, running_array};
sprite_t stateStopped = {3, 24, stopped_array};



typedef struct button_frame_t {
sprite_t *base;
	sprite_t *unpressed;
	sprite_t *changing;
	sprite_t *pressed;
}button_frame_t;


#endif

